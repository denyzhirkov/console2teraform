<% if (vpcs && vpcs.length) { %>
<% vpcs.forEach(function(vpc) { %>
resource "aws_vpc" "<%= vpc.resourceName %>" {
  cidr_block = "<%= vpc.cidrBlock %>"
<% if (vpc.tags && Object.keys(vpc.tags).length) { %>  tags = {
<% Object.entries(vpc.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (igws && igws.length) { %>
<% igws.forEach(function(igw) { %>
resource "aws_internet_gateway" "<%= igw.resourceName %>" {
<% if (igw.vpcId) { %>  vpc_id = "<%= igw.vpcId %>"
<% } %><% if (igw.tags && Object.keys(igw.tags).length) { %>  tags = {
<% Object.entries(igw.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (routeTables && routeTables.length) { %>
<% routeTables.forEach(function(rt) { %>
resource "aws_route_table" "<%= rt.resourceName %>" {
  vpc_id = "<%= rt.vpcId %>"
<% if (rt.tags && Object.keys(rt.tags).length) { %>  tags = {
<% Object.entries(rt.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>
<% if (rt.routes && rt.routes.length) { %>
<% rt.routes.forEach(function(route) { %>
  route {
    cidr_block = "<%= route.DestinationCidrBlock || '' %>"
    gateway_id = "<%= route.GatewayId || '' %>"
    instance_id = "<%= route.InstanceId || '' %>"
    nat_gateway_id = "<%= route.NatGatewayId || '' %>"
    transit_gateway_id = "<%= route.TransitGatewayId || '' %>"
    vpc_peering_connection_id = "<%= route.VpcPeeringConnectionId || '' %>"
  }
<% }) %>
<% } %>}
<% if (rt.associations && rt.associations.length) { %>
<% rt.associations.forEach(function(assoc, idx) { %>
<% if (assoc.SubnetId) { %>
resource "aws_route_table_association" "<%= rt.resourceName %>_<%= idx + 1 %>" {
  subnet_id      = "<%= assoc.SubnetId %>"
  route_table_id = aws_route_table.<%= rt.resourceName %>.id
}
<% } %>
<% }) %>
<% } %>
<% }) %>
<% } %>

<% if (subnets && subnets.length) { %>
<% subnets.forEach(function(subnet) { %>
resource "aws_subnet" "<%= subnet.resourceName %>" {
  vpc_id            = "<%= subnet.vpcId %>"
  cidr_block        = "<%= subnet.cidrBlock %>"
  availability_zone = "<%= subnet.availabilityZone %>"
<% if (subnet.tags && Object.keys(subnet.tags).length) { %>  tags = {
<% Object.entries(subnet.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (ec2 && ec2.length) { %>
<% ec2.forEach(function(instance) { %>
resource "aws_instance" "<%= instance.resourceName %>" {
  ami           = "<%= instance.ami %>"
  instance_type = "<%= instance.instanceType %>"
<% if (instance.subnetId) { %>  subnet_id     = "<%= instance.subnetId %>"
<% } %><% if (instance.vpcId) { %>  vpc_security_group_ids = [<%=(instance.securityGroups || []).map(g => '"'+g+'"').join(', ') %>]
<% } %><% if (instance.tags && Object.keys(instance.tags).length) { %>  tags = {
<% Object.entries(instance.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (s3 && s3.length) { %>
<% s3.forEach(function(bucket) { %>
resource "aws_s3_bucket" "<%= bucket.resourceName %>" {
  bucket = "<%= bucket.bucket %>"
  acl    = "<%= bucket.acl %>"
}
<% }) %>
<% } %>

<% if (securityGroups && securityGroups.length) { %>
<% securityGroups.forEach(function(sg) { %>
resource "aws_security_group" "<%= sg.resourceName %>" {
  name        = "<%= sg.resourceName %>"
  description = "<%= sg.description %>"
<% if (sg.vpcId) { %>  vpc_id     = "<%= sg.vpcId %>"
<% } %>
<% if (sg.ingress && sg.ingress.length) { %>
  ingress {
<% sg.ingress.forEach(function(rule) { %>
    from_port   = <%= rule.FromPort ?? 0 %>
    to_port     = <%= rule.ToPort ?? 0 %>
    protocol    = "<%= rule.IpProtocol %>"
    cidr_blocks = [<%=(rule.IpRanges || []).map(r => '"'+r.CidrIp+'"').join(', ') %>]
  <% }) %>  }
<% } %>
<% if (sg.egress && sg.egress.length) { %>
  egress {
<% sg.egress.forEach(function(rule) { %>
    from_port   = <%= rule.FromPort ?? 0 %>
    to_port     = <%= rule.ToPort ?? 0 %>
    protocol    = "<%= rule.IpProtocol %>"
    cidr_blocks = [<%=(rule.IpRanges || []).map(r => '"'+r.CidrIp+'"').join(', ') %>]
  <% }) %>  }
<% } %>
<% if (sg.tags && Object.keys(sg.tags).length) { %>  tags = {
<% Object.entries(sg.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (ecsClusters && ecsClusters.length) { %>
<% ecsClusters.forEach(function(cluster) { %>
resource "aws_ecs_cluster" "<%= cluster.resourceName %>" {
  name = "<%= cluster.resourceName %>"
<% if (cluster.tags && Object.keys(cluster.tags).length) { %>  tags = {
<% Object.entries(cluster.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (ecsTaskDefs && ecsTaskDefs.length) { %>
<% ecsTaskDefs.forEach(function(td) { %>
resource "aws_ecs_task_definition" "<%= td.resourceName %>" {
  family                   = "<%= td.family %>"
  network_mode             = "<%= td.networkMode %>"
  requires_compatibilities = [<%=(td.requiresCompatibilities || []).map(c => '"'+c+'"').join(', ') %>]
  cpu                      = "<%= td.cpu %>"
  memory                   = "<%= td.memory %>"
  container_definitions    = jsonencode(<%- JSON.stringify(td.containerDefinitions, null, 2) %>)
<% if (td.tags && Object.keys(td.tags).length) { %>  tags = {
<% Object.entries(td.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (ecsServices && ecsServices.length) { %>
<% ecsServices.forEach(function(svc) { %>
resource "aws_ecs_service" "<%= svc.resourceName %>" {
  name            = "<%= svc.resourceName %>"
  cluster         = aws_ecs_cluster.<%= svc.clusterArn.split('/').pop() %>.id
  task_definition = aws_ecs_task_definition.<%= svc.taskDefinition.split('/')[1] %>.arn
  desired_count   = <%= svc.desiredCount %>
  launch_type     = "<%= svc.launchType %>"
<% if (svc.tags && Object.keys(svc.tags).length) { %>  tags = {
<% Object.entries(svc.tags).forEach(([k, v]) => { %>    <%= k %> = "<%= v %>"
<% }) %>  }
<% } %>}
<% }) %>
<% } %>

<% if (albs && albs.length) { %>
<% albs.forEach(function(alb) { %>
resource "aws_lb" "<%= alb.resourceName %>" {
  name               = "<%= alb.name %>"
  load_balancer_type = "<%= alb.type %>"
  internal           = <%= alb.scheme === 'internal' ? 'true' : 'false' %>
  subnets            = [<%=(alb.subnets || []).map(s => '"'+s+'"').join(', ') %>]
  security_groups    = [<%=(alb.securityGroups || []).map(sg => '"'+sg+'"').join(', ') %>]
  tags = {
    Name = "<%= alb.name %>"
  }
}
<% }) %>
<% } %>

<% if (albTargetGroups && albTargetGroups.length) { %>
<% albTargetGroups.forEach(function(tg) { %>
resource "aws_lb_target_group" "<%= tg.resourceName %>" {
  name     = "<%= tg.name %>"
  port     = <%= tg.port %>
  protocol = "<%= tg.protocol %>"
  vpc_id   = "<%= tg.vpcId %>"
<% if (tg.targetType) { %>  target_type = "<%= tg.targetType %>"
<% } %><% if (tg.healthCheckPath) { %>  health_check {
    path = "<%= tg.healthCheckPath %>"
  }
<% } %>}
<% }) %>
<% } %>

<% if (albListeners && albListeners.length) { %>
<% albListeners.forEach(function(listener) { %>
resource "aws_lb_listener" "<%= listener.resourceName %>" {
  load_balancer_arn = aws_lb.<%= listener.loadBalancerArn.split('/').pop() %>.arn
  port              = <%= listener.port %>
  protocol          = "<%= listener.protocol %>"
  default_action {
    type             = "<%= listener.defaultActions[0]?.Type || 'forward' %>"
    target_group_arn = aws_lb_target_group.<%= listener.defaultActions[0]?.TargetGroupArn ? listener.defaultActions[0].TargetGroupArn.split('/')[1] : '' %>.arn
  }
}
<% }) %>
<% } %> 